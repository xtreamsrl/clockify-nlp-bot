name: .NET Core CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_WEBAPP_NAME: netTimeSurveyBot
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '3.1.x'
  CLOCKIFY_API_KEY: ${{ secrets.CLOCKIFY_API_KEY }}
  CLOCKIFY_WS_ID: ${{ secrets.CLOCKIFY_WS_ID }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    steps:
    # Checkout the repo
    - uses: actions/checkout@v2
    
    # Setup .NET Core SDK
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    # Run dotnet build
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    # Run dotnet test and upload resulting artifacts for analysis
    - name: Test
      run: dotnet test --no-restore --logger trx --results-directory "TestResults-${{ matrix.os }}"
    - name: Upload dotnet test results
      uses: actions/upload-artifact@v2
      with:
        name: dotnet-results-${{ matrix.os }}
        path: TestResults-${{ matrix.os }}
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
      
    # Run dotnet publish and upload resulting artifact when os is windows-latest
    - name: Publish artifact
      run: dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/clockify-nlp-bot'
      if: ${{ success() && matrix.os == 'windows-latest'}}
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: clockify-nlp-bot
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/clockify-nlp-bot
      if: ${{ success() && matrix.os == 'windows-latest'}}