name: .NET Core CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_WEBAPP_NAME: netTimeSurveyBot
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '3.1.x'
  CLOCKIFY_API_KEY: ${{ secrets.CLOCKIFY_API_KEY }}
  CLOCKIFY_WS_ID: ${{ secrets.CLOCKIFY_WS_ID }}

jobs:
  build:
    name: Build and package
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    steps:
    # Checkout the repo
    - uses: actions/checkout@v2
    
    # Setup .NET Core SDK
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    # Run dotnet build
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Show GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT" ```
      
    # Run unit tests and upload resulting artifacts for analysis
    - name: Unit test
      run: |
        dotnet test tests/Bot.Tests --no-restore --logger trx --results-directory "UnitTestResults-${{ matrix.os }}"
    - name: Upload unit test results
      uses: actions/upload-artifact@v2
      with:
        name: unit-test-results-${{ matrix.os }}
        path: UnitTestResults-${{ matrix.os }}
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

    # Run integration tests and upload resulting artifacts for analysis
    - name: Integration test
      run: |
        dotnet test tests/Bot.Integration.Tests --no-restore --logger trx --results-directory "IntegrationTestResults-${{ matrix.os }}"
      if: ${{
        (always() && github.event_name != 'pull_request') ||
        (github.event_name == 'pull_request' &&
        github.event.pull_request.author_association == 'COLLABORATOR') }}
    - name: Upload integration test results
      uses: actions/upload-artifact@v2
      with:
        name: it-test-results-${{ matrix.os }}
        path: IntegrationTestResults-${{ matrix.os }}
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ 
        (always() && github.event_name != 'pull_request') ||
        (github.event_name == 'pull_request' && 
        github.event.pull_request.author_association == 'COLLABORATOR') }}

      # Run dotnet publish and upload resulting artifact when os is windows-latest
    - name: Publish artifact
      run: dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/clockify-nlp-bot'
      if: ${{ success() && matrix.os == 'windows-latest'}}
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: clockify-nlp-bot
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/clockify-nlp-bot
      if: ${{ success() && matrix.os == 'windows-latest'}}
      
  deploy:
    name: Deploy artifact
    timeout-minutes: 5
    needs: build
    runs-on: ubuntu-latest
    if: contains('refs/heads/main', github.ref)
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: clockify-nlp-bot
          path: './clockify-nlp-bot'
          
      # Deploy to Azure Web apps
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }}
          package: './clockify-nlp-bot'